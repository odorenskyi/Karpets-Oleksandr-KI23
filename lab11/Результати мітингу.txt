Аналіз задач IT-проєкту та вимоги до ПЗ

Вимоги: 
1. Кожен модуль має містити try-throw-catch блоки.
2. Мова користувача - українська.
3. Робота с файлами лише у бінарному вигляді.
4. БД автоматично завантажується при запуску й автоматично зберігається при вимкнені ПЗ.
5. Структура (Employee) має бути описана у окремому .h файлі.

//

Аналіз та розподіл задач

1. Виведення всієї бази на екран або у текстовий файл ( на вибір користувача ).
	Функція void getDataBase(string order) - за змінною order 
є розгалуження на вивід у текстовий файл чи на екран, файл копія буде мати ту ж назву але допис "copy". 

Відповідальний за реалізацію - Карпець Олександр.

2. Додавання нового запису до бази даних.
	Функція void addToDataBase(Employee *emp) - записує у нього дані із переданої структури (*emp).

Відповідальний за реалізацію - Яровець Тарас.

3. Пошук запису за введеним прізвищем працівника.
	Функція void getFromDataBase(Employee *head) приймає початок структури та циклом-перебором
шукає запис.

Відповідальний за реалізацію - Чепіль Вадим.

4. Вилучення заданого оператором запису з бази даних.
	Функція void deleteFromDataBase(Employee *head) приймає початок структури та циклом-перебором
шукає запис, котрий треба видалити (N), попередньому (N-1) надає адресу наступного після видаленого (N+1).

Відповідальний за реалізацію - Чепіль Вадим.

5. Завершення роботи програми з автоматичним записом БД у файл.
Функція void saveDataBase(Employee *head) приймає початок структури та циклом-перебором
записує дані у файл.

Відповідальний за реалізацію - Яровець Тарас.

6. Автоматичне завантаження БД при запуску ПЗ.
					
Відповідальний за реалізацію - Карпець Олександр.

//

Архітектура:
Файли: 
	struct_type_project_2.h - заголовковий файл, що містить опис структури Employee
	prj_2_Karpets - результуюча програма.
	ModulesKarpets.a/.h (Модулі розроблені Карпецем Олександром)
	ModulesYarovets.a/.h (Модулі розроблені Яровецм Тарасом)
	ModulesChepil.a/.h (Модулі розроблені Чепілем Вадимом)

//

Тип структури:
	Однонапрямлений список

//

Опис структруи:
#ifndef STRUCT_TYPE_PROJECT_2_H_INCLUDED
#define STRUCT_TYPE_PROJECT_2_H_INCLUDED

struct Employee {
    string fillDate;
    int rollNumber;
    int ID;
    string gender;
    string typeOfWork;
    string fullName;
    string dateOfBirthday;
    string citizenship;
    string education;
    string lastWork;
    string positionOnLastWork;
    string workExperience;
    string placeOfresidence;
    string passportData;
    string moreInf;
    string dateOfDismissal;
    string reasonForDisissal;
};

#endif // STRUCT_TYPE_PROJECT_2_H_INCLUDED

//

План робіт:
	Реалізація задач за нумерацією, від першочергової, до останньої:
	6, 2, 1, 3, 4, 5. (6 - реалізовується першою, 6 - останньою).
